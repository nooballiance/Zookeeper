!function(e){function r(e,r,o){return 4===arguments.length?t.apply(this,arguments):void n(e,{declarative:!0,deps:r,declare:o})}function t(e,r,t,o){n(e,{declarative:!1,deps:r,executingRequire:t,execute:o})}function n(e,r){r.name=e,e in v||(v[e]=r),r.normalizedDeps=r.deps}function o(e,r){if(r[e.groupIndex]=r[e.groupIndex]||[],-1==g.call(r[e.groupIndex],e)){r[e.groupIndex].push(e);for(var t=0,n=e.normalizedDeps.length;n>t;t++){var a=e.normalizedDeps[t],u=v[a];if(u&&!u.evaluated){var d=e.groupIndex+(u.declarative!=e.declarative);if(void 0===u.groupIndex||u.groupIndex<d){if(void 0!==u.groupIndex&&(r[u.groupIndex].splice(g.call(r[u.groupIndex],u),1),0==r[u.groupIndex].length))throw new TypeError("Mixed dependency cycle detected");u.groupIndex=d}o(u,r)}}}}function a(e){var r=v[e];r.groupIndex=0;var t=[];o(r,t);for(var n=!!r.declarative==t.length%2,a=t.length-1;a>=0;a--){for(var u=t[a],i=0;i<u.length;i++){var s=u[i];n?d(s):l(s)}n=!n}}function u(e){return y[e]||(y[e]={name:e,dependencies:[],exports:{},importers:[]})}function d(r){if(!r.module){var t=r.module=u(r.name),n=r.module.exports,o=r.declare.call(e,function(e,r){if(t.locked=!0,"object"==typeof e)for(var o in e)n[o]=e[o];else n[e]=r;for(var a=0,u=t.importers.length;u>a;a++){var d=t.importers[a];if(!d.locked)for(var i=0;i<d.dependencies.length;++i)d.dependencies[i]===t&&d.setters[i](n)}return t.locked=!1,r},r.name);t.setters=o.setters,t.execute=o.execute;for(var a=0,i=r.normalizedDeps.length;i>a;a++){var l,s=r.normalizedDeps[a],c=v[s],f=y[s];f?l=f.exports:c&&!c.declarative?l=c.esModule:c?(d(c),f=c.module,l=f.exports):l=p(s),f&&f.importers?(f.importers.push(t),t.dependencies.push(f)):t.dependencies.push(null),t.setters[a]&&t.setters[a](l)}}}function i(e){var r,t=v[e];if(t)t.declarative?f(e,[]):t.evaluated||l(t),r=t.module.exports;else if(r=p(e),!r)throw new Error("Unable to load dependency "+e+".");return(!t||t.declarative)&&r&&r.__useDefault?r["default"]:r}function l(r){if(!r.module){var t={},n=r.module={exports:t,id:r.name};if(!r.executingRequire)for(var o=0,a=r.normalizedDeps.length;a>o;o++){var u=r.normalizedDeps[o],d=v[u];d&&l(d)}r.evaluated=!0;var c=r.execute.call(e,function(e){for(var t=0,n=r.deps.length;n>t;t++)if(r.deps[t]==e)return i(r.normalizedDeps[t]);throw new TypeError("Module "+e+" not declared as a dependency.")},t,n);c&&(n.exports=c),t=n.exports,t&&t.__esModule?r.esModule=t:r.esModule=s(t)}}function s(r){var t={};if(("object"==typeof r||"function"==typeof r)&&r!==e)if(m)for(var n in r)"default"!==n&&c(t,r,n);else{var o=r&&r.hasOwnProperty;for(var n in r)"default"===n||o&&!r.hasOwnProperty(n)||(t[n]=r[n])}return t["default"]=r,x(t,"__useDefault",{value:!0}),t}function c(e,r,t){try{var n;(n=Object.getOwnPropertyDescriptor(r,t))&&x(e,t,n)}catch(o){return e[t]=r[t],!1}}function f(r,t){var n=v[r];if(n&&!n.evaluated&&n.declarative){t.push(r);for(var o=0,a=n.normalizedDeps.length;a>o;o++){var u=n.normalizedDeps[o];-1==g.call(t,u)&&(v[u]?f(u,t):p(u))}n.evaluated||(n.evaluated=!0,n.module.execute.call(e))}}function p(e){if(I[e])return I[e];if("@node/"==e.substr(0,6))return D(e.substr(6));var r=v[e];if(!r)throw"Module "+e+" not present.";return a(e),f(e,[]),v[e]=void 0,r.declarative&&x(r.module.exports,"__esModule",{value:!0}),I[e]=r.declarative?r.module.exports:r.esModule}var v={},g=Array.prototype.indexOf||function(e){for(var r=0,t=this.length;t>r;r++)if(this[r]===e)return r;return-1},m=!0;try{Object.getOwnPropertyDescriptor({a:0},"a")}catch(h){m=!1}var x;!function(){try{Object.defineProperty({},"a",{})&&(x=Object.defineProperty)}catch(e){x=function(e,r,t){try{e[r]=t.value||t.get.call(e)}catch(n){}}}}();var y={},D="undefined"!=typeof System&&System._nodeRequire||"undefined"!=typeof require&&require.resolve&&"undefined"!=typeof process&&require,I={"@empty":{}};return function(e,n,o,a){return function(u){u(function(u){for(var d={_nodeRequire:D,register:r,registerDynamic:t,get:p,set:function(e,r){I[e]=r},newModule:function(e){return e}},i=0;i<n.length;i++)(function(e,r){r&&r.__esModule?I[e]=r:I[e]=s(r)})(n[i],arguments[i]);a(d);var l=p(e[0]);if(e.length>1)for(var i=1;i<e.length;i++)p(e[i]);return o?l["default"]:l})}}}("undefined"!=typeof self?self:global)

(["1"], [], true, function($__System) {
var require = this.require, exports = this.exports, module = this.module;
$__System.registerDynamic("2", ["4", "3"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      r = Reflect.decorate(decorators, target, key, desc);
    else
      for (var i = decorators.length - 1; i >= 0; i--)
        if (d = decorators[i])
          r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var emscripten_library_decorator_1 = $__require('4');
  var BindingType_1 = $__require('3');
  emscripten_library_decorator_1.setEvil(function(code) {
    return eval(code);
  });
  var _nbind;
  (function(_nbind) {
    _nbind.BindType = BindingType_1._nbind.BindType;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  var _nbind;
  (function(_nbind) {
    var Wrapper = (function() {
      function Wrapper() {}
      return Wrapper;
    }());
    _nbind.Wrapper = Wrapper;
    var BindClass = (function(_super) {
      __extends(BindClass, _super);
      function BindClass(id, name, proto) {
        _super.call(this, id, name);
        this.makeWireRead = function(expr) {
          return ('(' + expr + '||' + '_nbind.throwError("Value type JavaScript class is missing or not registered"),' + '_nbind.value' + ')');
        };
        this.wireWrite = _nbind.pushValue;
        this.proto = proto;
      }
      return BindClass;
    }(_nbind.BindType));
    _nbind.BindClass = BindClass;
    _nbind.ptrMarker = {};
    function popPointer(ptr, type) {
      if (ptr === 0)
        return (null);
      return (new type.proto(_nbind.ptrMarker, ptr));
    }
    _nbind.popPointer = popPointer;
    function pushPointer(obj, type) {
      if (!(obj instanceof type.proto))
        throw (new Error('Type mismatch'));
      return (obj.__nbindPtr);
    }
    _nbind.pushPointer = pushPointer;
    var BindClassPtr = (function(_super) {
      __extends(BindClassPtr, _super);
      function BindClassPtr(id, name, proto) {
        var _this = this;
        _super.call(this, id, name);
        this.wireRead = function(arg) {
          return popPointer(arg, _this);
        };
        this.wireWrite = function(arg) {
          return pushPointer(arg, _this);
        };
        this.proto = proto;
      }
      return BindClassPtr;
    }(_nbind.BindType));
    _nbind.BindClassPtr = BindClassPtr;
    var _ = (function() {
      function _() {}
      _ = __decorate([emscripten_library_decorator_1.prepareNamespace('_nbind')], _);
      return _;
    }());
    _nbind._ = _;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  return module.exports;
});

$__System.registerDynamic("5", ["4", "3"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      r = Reflect.decorate(decorators, target, key, desc);
    else
      for (var i = decorators.length - 1; i >= 0; i--)
        if (d = decorators[i])
          r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var emscripten_library_decorator_1 = $__require('4');
  var BindingType_1 = $__require('3');
  emscripten_library_decorator_1.setEvil(function(code) {
    return eval(code);
  });
  var _nbind;
  (function(_nbind) {
    _nbind.BindType = BindingType_1._nbind.BindType;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  var _nbind;
  (function(_nbind) {
    _nbind.callbackSignatureList = [];
    _nbind.callbackList = [null];
    _nbind.callbackRefCountList = [0];
    _nbind.callbackFreeList = [];
    function registerCallback(func) {
      if (typeof(func) != 'function')
        _nbind.throwError('Type mismatch');
      var num = _nbind.callbackFreeList.pop() || _nbind.callbackList.length;
      _nbind.callbackList[num] = func;
      _nbind.callbackRefCountList[num] = 1;
      return (num);
    }
    _nbind.registerCallback = registerCallback;
    function unregisterCallback(num) {
      _nbind.callbackList[num] = null;
      _nbind.callbackFreeList.push(num);
    }
    _nbind.unregisterCallback = unregisterCallback;
    var CallbackType = (function(_super) {
      __extends(CallbackType, _super);
      function CallbackType(id, name) {
        _super.call(this, id, name);
        this.wireWrite = registerCallback;
      }
      return CallbackType;
    }(_nbind.BindType));
    _nbind.CallbackType = CallbackType;
    var _ = (function() {
      function _() {}
      _ = __decorate([emscripten_library_decorator_1.prepareNamespace('_nbind')], _);
      return _;
    }());
    _nbind._ = _;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  var nbind = (function() {
    function nbind() {}
    nbind._nbind_register_callback_signature = function(typeListPtr, typeCount) {
      var typeList = _nbind.readTypeIdList(typeListPtr, typeCount);
      var num = _nbind.callbackSignatureList.length;
      _nbind.callbackSignatureList[num] = _nbind.makeJSCaller(typeList);
      return (num);
    };
    nbind._nbind_reference_callback = function(num) {
      ++_nbind.callbackRefCountList[num];
    };
    nbind._nbind_free_callback = function(num) {
      if (--_nbind.callbackRefCountList[num] == 0)
        _nbind.unregisterCallback(num);
    };
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "_nbind_register_callback_signature", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "_nbind_reference_callback", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "_nbind_free_callback", null);
    nbind = __decorate([emscripten_library_decorator_1.exportLibrary], nbind);
    return nbind;
  }());
  return module.exports;
});

$__System.registerDynamic("6", ["4", "3"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      r = Reflect.decorate(decorators, target, key, desc);
    else
      for (var i = decorators.length - 1; i >= 0; i--)
        if (d = decorators[i])
          r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var emscripten_library_decorator_1 = $__require('4');
  var BindingType_1 = $__require('3');
  emscripten_library_decorator_1.setEvil(function(code) {
    return eval(code);
  });
  var _defineHidden = emscripten_library_decorator_1.defineHidden;
  var _nbind;
  (function(_nbind) {
    _nbind.BindType = BindingType_1._nbind.BindType;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  var _nbind;
  (function(_nbind) {
    _nbind.valueList = [];
    _nbind.valueFreeList = [];
    function pushValue(value) {
      var num = _nbind.valueFreeList.pop() || _nbind.valueList.length;
      _nbind.valueList[num] = value;
      return (num);
    }
    _nbind.pushValue = pushValue;
    function popValue(num) {
      var obj = _nbind.valueList[num];
      _nbind.valueList[num] = null;
      _nbind.valueFreeList.push(num);
      return (obj);
    }
    _nbind.popValue = popValue;
    var CreateValueType = (function(_super) {
      __extends(CreateValueType, _super);
      function CreateValueType(id, name) {
        _super.call(this, id, name);
        this.makeWireWrite = function(expr) {
          return '((_nbind.value=new ' + expr + '),0)';
        };
      }
      return CreateValueType;
    }(_nbind.BindType));
    _nbind.CreateValueType = CreateValueType;
    var _ = (function() {
      function _() {}
      _ = __decorate([emscripten_library_decorator_1.prepareNamespace('_nbind')], _);
      return _;
    }());
    _nbind._ = _;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  var nbind = (function() {
    function nbind() {}
    nbind._nbind_get_value_object = function(num, ptr) {
      var obj = _nbind.popValue(num);
      obj.fromJS(function() {
        obj.__nbindValueConstructor.apply(this, Array.prototype.concat.apply([ptr], arguments));
      });
    };
    nbind.nbind_value = function(name, proto) {
      Module['NBind'].bind_value(name, proto);
      _defineHidden(_nbind.typeTbl[name].proto.prototype.__nbindValueConstructor)(proto.prototype, '__nbindValueConstructor');
    };
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "_nbind_get_value_object", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "nbind_value", null);
    nbind = __decorate([emscripten_library_decorator_1.exportLibrary], nbind);
    return nbind;
  }());
  return module.exports;
});

$__System.registerDynamic("7", ["4"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      r = Reflect.decorate(decorators, target, key, desc);
    else
      for (var i = decorators.length - 1; i >= 0; i--)
        if (d = decorators[i])
          r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var emscripten_library_decorator_1 = $__require('4');
  emscripten_library_decorator_1.setEvil(function(code) {
    return eval(code);
  });
  var _nbind;
  (function(_nbind) {
    _nbind.typeTbl = {};
    _nbind.typeList = [];
    _nbind.MethodType = {};
    var Pool = (function() {
      function Pool() {}
      Pool.lalloc = function(size) {
        size = (size + 7) & ~7;
        var used = HEAPU32[Pool.usedPtr];
        if (size > Pool.pageSize / 2 || size > Pool.pageSize - used) {
          var NBind = _nbind.typeTbl['NBind'].proto;
          return (NBind.lalloc(size));
        } else {
          HEAPU32[Pool.usedPtr] = used + size;
          return (Pool.rootPtr + used);
        }
      };
      Pool.lreset = function(used, page) {
        var topPage = HEAPU32[Pool.pagePtr];
        if (topPage) {
          var NBind = _nbind.typeTbl['NBind'].proto;
          NBind.lreset(used, page);
        } else {
          HEAPU32[Pool.usedPtr] = used;
        }
      };
      return Pool;
    }());
    _nbind.Pool = Pool;
    function getComplexType(id) {
      var placeholderFlag = HEAPU8[id];
      if (placeholderFlag == 0)
        throw (new Error('Unbound type ' + id));
      var memberId = HEAPU32[(id >> 2) + 1];
      var memberType = _nbind.typeList[memberId];
      var type;
      if (!memberType)
        throw (new Error('Unbound member type ' + memberId));
      switch (placeholderFlag) {
        case 1:
          type = new _nbind.ArrayType(id, memberType);
          break;
        case 2:
          var size = HEAPU32[(id >> 2) + 2];
          type = new _nbind.ArrayType(id, memberType, size);
          break;
        default:
          throw (new Error('Corrupt type ' + id + ' with flag ' + placeholderFlag));
      }
      _nbind.typeList[id] = type;
      return (type);
    }
    function getTypes(idList) {
      return (idList.map(function(id) {
        if (typeof(id) == 'number') {
          var type = _nbind.typeList[id];
          return (type || getComplexType(id));
        } else
          return (_nbind.typeTbl[id]);
      }));
    }
    _nbind.getTypes = getTypes;
    function readTypeIdList(typeListPtr, typeCount) {
      return (Array.prototype.slice.call(HEAPU32, typeListPtr / 4, typeListPtr / 4 + typeCount));
    }
    _nbind.readTypeIdList = readTypeIdList;
    function makeSignature(typeList) {
      var mangleMap = {
        float32_t: 'f',
        float64_t: 'd',
        void: 'v'
      };
      return (typeList.map(function(type) {
        return (mangleMap[type.name] || 'i');
      }).join(''));
    }
    _nbind.makeSignature = makeSignature;
    function addMethod(obj, name, func, arity) {
      var overload = obj[name];
      if (obj.hasOwnProperty(name) && overload) {
        if (overload.arity || overload.arity === 0) {
          overload = _nbind.makeOverloader(overload, overload.arity);
          obj[name] = overload;
        }
        overload.addMethod(func, arity);
      } else {
        func.arity = arity;
        obj[name] = func;
      }
    }
    _nbind.addMethod = addMethod;
    function throwError(message) {
      throw (new Error(message));
    }
    _nbind.throwError = throwError;
    var _ = (function() {
      function _() {}
      _ = __decorate([emscripten_library_decorator_1.prepareNamespace('_nbind')], _);
      return _;
    }());
    _nbind._ = _;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  return module.exports;
});

$__System.registerDynamic("3", ["4", "7"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      r = Reflect.decorate(decorators, target, key, desc);
    else
      for (var i = decorators.length - 1; i >= 0; i--)
        if (d = decorators[i])
          r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var emscripten_library_decorator_1 = $__require('4');
  var Globals_1 = $__require('7');
  emscripten_library_decorator_1.setEvil(function(code) {
    return eval(code);
  });
  var _nbind;
  (function(_nbind) {
    _nbind.Pool = Globals_1._nbind.Pool;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  var _nbind;
  (function(_nbind) {
    var BindType = (function() {
      function BindType(id, name) {
        this.heap = HEAPU32;
        this.ptrSize = 4;
        this.id = id;
        this.name = name;
        _nbind.typeTbl[name] = this;
        _nbind.typeList[id] = this;
      }
      return BindType;
    }());
    _nbind.BindType = BindType;
    var PrimitiveType = (function(_super) {
      __extends(PrimitiveType, _super);
      function PrimitiveType(id, name, size, isUnsigned, isFloat) {
        _super.call(this, id, name);
        var heapTbl = (isFloat ? {
          32: HEAPF32,
          64: HEAPF64
        } : isUnsigned ? {
          8: HEAPU8,
          16: HEAPU16,
          32: HEAPU32
        } : {
          8: HEAP8,
          16: HEAP16,
          32: HEAP32
        });
        this.heap = heapTbl[size * 8];
        this.ptrSize = size;
      }
      return PrimitiveType;
    }(BindType));
    _nbind.PrimitiveType = PrimitiveType;
    function pushCString(str) {
      if (str === null || str === undefined)
        return (0);
      str = str.toString();
      var length = Module.lengthBytesUTF8(str) + 1;
      var result = _nbind.Pool.lalloc(length);
      Module.stringToUTF8Array(str, HEAPU8, result, length);
      return (result);
    }
    _nbind.pushCString = pushCString;
    function popCString(ptr) {
      if (ptr === 0)
        return (null);
      return (Module.Pointer_stringify(ptr));
    }
    _nbind.popCString = popCString;
    var CStringType = (function(_super) {
      __extends(CStringType, _super);
      function CStringType(id, name) {
        _super.call(this, id, name);
        this.wireRead = popCString;
        this.wireWrite = pushCString;
        this.readResources = [_nbind.resources.pool];
        this.writeResources = [_nbind.resources.pool];
      }
      return CStringType;
    }(BindType));
    _nbind.CStringType = CStringType;
    var BooleanType = (function(_super) {
      __extends(BooleanType, _super);
      function BooleanType(id, name) {
        _super.call(this, id, name);
        this.wireRead = function(arg) {
          return !!arg;
        };
        this.makeWireRead = function(expr) {
          return '!!(' + expr + ')';
        };
      }
      return BooleanType;
    }(BindType));
    _nbind.BooleanType = BooleanType;
    var _ = (function() {
      function _() {}
      _ = __decorate([emscripten_library_decorator_1.prepareNamespace('_nbind')], _);
      return _;
    }());
    _nbind._ = _;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  return module.exports;
});

$__System.registerDynamic("8", ["4", "7", "3"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      r = Reflect.decorate(decorators, target, key, desc);
    else
      for (var i = decorators.length - 1; i >= 0; i--)
        if (d = decorators[i])
          r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var emscripten_library_decorator_1 = $__require('4');
  var Globals_1 = $__require('7');
  var BindingType_1 = $__require('3');
  emscripten_library_decorator_1.setEvil(function(code) {
    return eval(code);
  });
  var _nbind;
  (function(_nbind) {
    _nbind.Pool = Globals_1._nbind.Pool;
    _nbind.BindType = BindingType_1._nbind.BindType;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  var _nbind;
  (function(_nbind) {
    function pushArray(arr, type) {
      if (!arr)
        return (0);
      var length = arr.length;
      if ((type.size || type.size === 0) && length < type.size) {
        throw (new Error('Type mismatch'));
      }
      var ptrSize = type.memberType.ptrSize;
      var result = _nbind.Pool.lalloc(4 + length * ptrSize);
      HEAPU32[result / 4] = length;
      var heap = type.memberType.heap;
      var ptr = (result + 4) / ptrSize;
      var wireWrite = type.memberType.wireWrite;
      var num = 0;
      if (wireWrite) {
        while (num < length) {
          heap[ptr++] = wireWrite(arr[num++]);
        }
      } else {
        while (num < length) {
          heap[ptr++] = arr[num++];
        }
      }
      return (result);
    }
    _nbind.pushArray = pushArray;
    function popArray(ptr, type) {
      if (ptr === 0)
        return (null);
      var length = HEAPU32[ptr / 4];
      var arr = new Array(length);
      var heap = type.memberType.heap;
      ptr = (ptr + 4) / type.memberType.ptrSize;
      var wireRead = type.memberType.wireRead;
      var num = 0;
      if (wireRead) {
        while (num < length) {
          arr[num++] = wireRead(heap[ptr++]);
        }
      } else {
        while (num < length) {
          arr[num++] = heap[ptr++];
        }
      }
      return (arr);
    }
    _nbind.popArray = popArray;
    var ArrayType = (function(_super) {
      __extends(ArrayType, _super);
      function ArrayType(id, memberType, size) {
        var _this = this;
        _super.call(this, id, ((size || size === 0) ? 'std::array<' + memberType.name + ', ' + size + '>' : 'std::vector<' + memberType.name + '>'));
        this.wireRead = function(arg) {
          return popArray(arg, _this);
        };
        this.wireWrite = function(arg) {
          return pushArray(arg, _this);
        };
        this.readResources = [_nbind.resources.pool];
        this.writeResources = [_nbind.resources.pool];
        this.memberType = memberType;
        if (size)
          this.size = size;
      }
      return ArrayType;
    }(_nbind.BindType));
    _nbind.ArrayType = ArrayType;
    function pushString(str) {
      if (str === null || str === undefined)
        return (0);
      str = str.toString();
      var length = Module.lengthBytesUTF8(str);
      var result = _nbind.Pool.lalloc(4 + length + 1);
      HEAPU32[result / 4] = length;
      Module.stringToUTF8Array(str, HEAPU8, result + 4, length + 1);
      return (result);
    }
    _nbind.pushString = pushString;
    function popString(ptr) {
      if (ptr === 0)
        return (null);
      var length = HEAPU32[ptr / 4];
      return (Module.Pointer_stringify(ptr + 4, length));
    }
    _nbind.popString = popString;
    var StringType = (function(_super) {
      __extends(StringType, _super);
      function StringType(id, name) {
        _super.call(this, id, name);
        this.wireRead = popString;
        this.wireWrite = pushString;
        this.readResources = [_nbind.resources.pool];
        this.writeResources = [_nbind.resources.pool];
      }
      return StringType;
    }(_nbind.BindType));
    _nbind.StringType = StringType;
    var _ = (function() {
      function _() {}
      _ = __decorate([emscripten_library_decorator_1.prepareNamespace('_nbind')], _);
      return _;
    }());
    _nbind._ = _;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  return module.exports;
});

$__System.registerDynamic("9", ["4"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      r = Reflect.decorate(decorators, target, key, desc);
    else
      for (var i = decorators.length - 1; i >= 0; i--)
        if (d = decorators[i])
          r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var emscripten_library_decorator_1 = $__require('4');
  emscripten_library_decorator_1.setEvil(function(code) {
    return eval(code);
  });
  var _nbind;
  (function(_nbind) {
    function makeArgList(argCount) {
      return (Array.apply(null, Array(argCount)).map(function(dummy, num) {
        return ('a' + (num + 1));
      }));
    }
    function anyNeedsWireWrite(typeList) {
      return (typeList.reduce(function(result, type) {
        return (result || !!type.wireWrite || !!type.makeWireWrite);
      }, false));
    }
    function anyNeedsWireRead(typeList) {
      return (typeList.reduce(function(result, type) {
        return (result || !!type.wireRead || !!type.makeWireRead);
      }, false));
    }
    function buildCallerFunction(dynCall, ptr, num, needsWireWrite, prefix, returnType, argTypeList) {
      var argList = makeArgList(argTypeList.length);
      var convertParamList = [];
      var paramNum = 0;
      function makeWireRead(type, expr) {
        if (type.makeWireRead) {
          return (type.makeWireRead(expr, convertParamList, paramNum++));
        } else if (type.wireRead) {
          convertParamList[paramNum] = type.wireRead;
          return ('(convertParamList[' + (paramNum++) + '](' + expr + '))');
        } else
          return (expr);
      }
      function makeWireWrite(type, expr) {
        if (type.makeWireWrite) {
          return (type.makeWireWrite(expr, convertParamList, paramNum++));
        } else if (type.wireWrite) {
          convertParamList[paramNum] = type.wireWrite;
          return ('(convertParamList[' + (paramNum++) + '](' + expr + '))');
        } else
          return (expr);
      }
      var callExpression = makeWireRead(returnType, 'dynCall(' + [prefix].concat(argList.map(function(name, index) {
        return makeWireWrite(argTypeList[index], name);
      })).join(',') + ')');
      var resourceSet = _nbind.listResources([returnType], argTypeList);
      var sourceCode = ('function(' + argList.join(',') + '){' + resourceSet.makeOpen() + 'var r=' + callExpression + ';' + resourceSet.makeClose() + 'return r;' + '}');
      return (eval('(' + sourceCode + ')'));
    }
    function buildJSCallerFunction(returnType, argTypeList) {
      var argList = makeArgList(argTypeList.length);
      var convertParamList = [];
      var paramNum = 0;
      function makeWireRead(type, expr) {
        if (type.makeWireRead) {
          return (type.makeWireRead(expr, convertParamList, paramNum++));
        } else if (type.wireRead) {
          convertParamList[paramNum] = type.wireRead;
          return ('convertParamList[' + (paramNum++) + '](' + expr + ')');
        } else
          return (expr);
      }
      function makeWireWrite(type, expr) {
        if (type.makeWireWrite) {
          return (type.makeWireWrite(expr, convertParamList, paramNum));
        } else if (type.wireWrite) {
          convertParamList[paramNum] = type.wireWrite;
          return ('convertParamList[' + (paramNum++) + '](' + expr + ')');
        } else
          return (expr);
      }
      var callExpression = makeWireWrite(returnType, '_nbind.callbackList[num](' + argList.map(function(name, index) {
        return makeWireRead(argTypeList[index], name);
      }).join(',') + ')');
      var resourceSet = _nbind.listResources(argTypeList, [returnType]);
      resourceSet.remove(_nbind.resources.pool);
      var sourceCode = ('function(' + ['dummy', 'num'].concat(argList).join(',') + '){' + resourceSet.makeOpen() + 'var r=' + callExpression + ';' + resourceSet.makeClose() + 'return r;' + '}');
      return (eval('(' + sourceCode + ')'));
    }
    _nbind.buildJSCallerFunction = buildJSCallerFunction;
    function makeJSCaller(idList) {
      var argCount = idList.length - 1;
      var typeList = _nbind.getTypes(idList);
      var returnType = typeList[0];
      var argTypeList = typeList.slice(1);
      var needsWireRead = anyNeedsWireRead(argTypeList);
      var needsWireWrite = returnType.wireWrite || returnType.makeWireWrite;
      if (!needsWireWrite && !needsWireRead) {
        switch (argCount) {
          case 0:
            return (function(dummy, num) {
              return (_nbind.callbackList[num]());
            });
          case 1:
            return (function(dummy, num, a1) {
              return (_nbind.callbackList[num](a1));
            });
          case 2:
            return (function(dummy, num, a1, a2) {
              return (_nbind.callbackList[num](a1, a2));
            });
          case 3:
            return (function(dummy, num, a1, a2, a3) {
              return (_nbind.callbackList[num](a1, a2, a3));
            });
          default:
            break;
        }
      }
      return (buildJSCallerFunction(returnType, argTypeList));
    }
    _nbind.makeJSCaller = makeJSCaller;
    function makeMethodCaller(ptr, num, boundID, idList) {
      var argCount = idList.length - 1;
      idList.splice(1, 0, 'uint32_t', boundID);
      var typeList = _nbind.getTypes(idList);
      var returnType = typeList[0];
      var argTypeList = typeList.slice(3);
      var needsWireRead = returnType.wireRead || returnType.makeWireRead;
      var needsWireWrite = anyNeedsWireWrite(argTypeList);
      var dynCall = Module['dynCall_' + _nbind.makeSignature(typeList)];
      if (!needsWireRead && !needsWireWrite) {
        switch (argCount) {
          case 0:
            return (function() {
              return (dynCall(ptr, num, this.__nbindPtr));
            });
          case 1:
            return (function(a1) {
              return (dynCall(ptr, num, this.__nbindPtr, a1));
            });
          case 2:
            return (function(a1, a2) {
              return (dynCall(ptr, num, this.__nbindPtr, a1, a2));
            });
          case 3:
            return (function(a1, a2, a3) {
              return (dynCall(ptr, num, this.__nbindPtr, a1, a2, a3));
            });
          default:
            break;
        }
      }
      return (buildCallerFunction(dynCall, ptr, num, needsWireWrite, 'ptr,num,this.__nbindPtr', returnType, argTypeList));
    }
    _nbind.makeMethodCaller = makeMethodCaller;
    function makeCaller(ptr, num, direct, idList) {
      var argCount = idList.length - 1;
      var typeList = _nbind.getTypes(idList);
      var returnType = typeList[0];
      var argTypeList = typeList.slice(1);
      var needsWireRead = returnType.wireRead || returnType.makeWireRead;
      var needsWireWrite = anyNeedsWireWrite(argTypeList);
      if (direct && !needsWireRead && !needsWireWrite) {
        var dynCall_1 = Module['dynCall_' + _nbind.makeSignature(typeList)];
        switch (argCount) {
          case 0:
            return (function() {
              return dynCall_1(direct);
            });
          case 1:
            return (function(a1) {
              return dynCall_1(direct, a1);
            });
          case 2:
            return (function(a1, a2) {
              return dynCall_1(direct, a1, a2);
            });
          case 3:
            return (function(a1, a2, a3) {
              return dynCall_1(direct, a1, a2, a3);
            });
          default:
            break;
        }
        ptr = null;
      }
      var prefix;
      if (ptr) {
        idList.splice(1, 0, 'uint32_t');
        prefix = 'ptr,num';
      } else {
        ptr = direct;
        prefix = 'ptr';
      }
      var dynCall = Module['dynCall_' + _nbind.makeSignature(_nbind.getTypes(idList))];
      return (buildCallerFunction(dynCall, ptr, num, needsWireWrite, prefix, returnType, argTypeList));
    }
    _nbind.makeCaller = makeCaller;
    function makeOverloader(func, arity) {
      var callerList = [];
      function call() {
        return (callerList[arguments.length].apply(this, arguments));
      }
      call.addMethod = function(_func, _arity) {
        callerList[_arity] = _func;
      };
      call.addMethod(func, arity);
      return (call);
    }
    _nbind.makeOverloader = makeOverloader;
    var _ = (function() {
      function _() {}
      _ = __decorate([emscripten_library_decorator_1.prepareNamespace('_nbind')], _);
      return _;
    }());
    _nbind._ = _;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  return module.exports;
});

$__System.registerDynamic("4", [], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var evil;
  function setEvil(otherEval) {
    evil = otherEval;
  }
  exports.setEvil = setEvil;
  function dep() {
    var depList = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      depList[_i - 0] = arguments[_i];
    }
    return (function(target, functionName) {
      var key = functionName + '__deps';
      var lib = target;
      lib[key] = (lib[key] || []).concat(depList.map(function(dep) {
        var name;
        if (typeof(dep) == 'function') {
          name = dep.name.substr(1);
          lib[name] = dep;
        } else {
          name = dep.substr(1);
          if (name != 'initNamespaces')
            lib[name] = evil('(' + dep + ')');
        }
        return (name);
      }));
    });
  }
  exports.dep = dep;
  function exportLibrary(target) {
    mergeInto(LibraryManager.library, target);
  }
  exports.exportLibrary = exportLibrary;
  var namespaceBodyTbl = {};
  function prepareNamespace(name) {
    return (function(target) {
      var body = evil('__decorate').caller.caller.toString();
      var prefix = new RegExp('^[ (]*function *\\( *' + name + ' *\\) *\\{');
      var suffix = new RegExp('var +' + target.name + ' *= *[^]*$');
      body = (namespaceBodyTbl[name] || '') + body.replace(prefix, '').replace(suffix, '');
      namespaceBodyTbl[name] = body;
    });
  }
  exports.prepareNamespace = prepareNamespace;
  function publishNamespace(name) {
    var exportName = name.substr(1);
    var body = namespaceBodyTbl[name];
    var bodyWrapped = '(function(' + name + '){' + body + '})' + '(' + name + ')';
    evil(name + '={};');
    var lib = {
      _extends: evil('__extends'),
      _decorate: evil('__decorate'),
      defineHidden: defineHidden
    };
    lib[exportName + '__deps'] = Object.keys(lib);
    lib[exportName + '__postset'] = bodyWrapped;
    mergeInto(LibraryManager.library, lib);
  }
  exports.publishNamespace = publishNamespace;
  function defineHidden(value) {
    return (function(target, key) {
      Object.defineProperty(target, key, {
        configurable: false,
        enumerable: false,
        writable: true,
        value: value
      });
    });
  }
  exports.defineHidden = defineHidden;
  return module.exports;
});

$__System.registerDynamic("a", ["4"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      r = Reflect.decorate(decorators, target, key, desc);
    else
      for (var i = decorators.length - 1; i >= 0; i--)
        if (d = decorators[i])
          r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var emscripten_library_decorator_1 = $__require('4');
  emscripten_library_decorator_1.setEvil(function(code) {
    return eval(code);
  });
  var _nbind;
  (function(_nbind) {
    var Resource = (function() {
      function Resource(open, close) {
        var _this = this;
        this.makeOpen = function() {
          return Object.keys(_this.openTbl).join('');
        };
        this.makeClose = function() {
          return Object.keys(_this.closeTbl).join('');
        };
        this.openTbl = {};
        this.closeTbl = {};
        if (open)
          this.openTbl[open] = true;
        if (close)
          this.closeTbl[close] = true;
      }
      Resource.prototype.add = function(other) {
        for (var _i = 0,
            _a = Object.keys(other.openTbl); _i < _a.length; _i++) {
          var key = _a[_i];
          this.openTbl[key] = true;
        }
        for (var _b = 0,
            _c = Object.keys(other.closeTbl); _b < _c.length; _b++) {
          var key = _c[_b];
          this.closeTbl[key] = true;
        }
      };
      Resource.prototype.remove = function(other) {
        for (var _i = 0,
            _a = Object.keys(other.openTbl); _i < _a.length; _i++) {
          var key = _a[_i];
          delete(this.openTbl[key]);
        }
        for (var _b = 0,
            _c = Object.keys(other.closeTbl); _b < _c.length; _b++) {
          var key = _c[_b];
          delete(this.closeTbl[key]);
        }
      };
      return Resource;
    }());
    _nbind.Resource = Resource;
    function listResources(readList, writeList) {
      var result = new Resource();
      for (var _i = 0,
          readList_1 = readList; _i < readList_1.length; _i++) {
        var bindType = readList_1[_i];
        for (var _a = 0,
            _b = bindType.readResources || []; _a < _b.length; _a++) {
          var resource = _b[_a];
          result.add(resource);
        }
      }
      for (var _c = 0,
          writeList_1 = writeList; _c < writeList_1.length; _c++) {
        var bindType = writeList_1[_c];
        for (var _d = 0,
            _e = bindType.writeResources || []; _d < _e.length; _d++) {
          var resource = _e[_d];
          result.add(resource);
        }
      }
      return (result);
    }
    _nbind.listResources = listResources;
    _nbind.resources = {pool: new Resource('var used=HEAPU32[_nbind.Pool.usedPtr],page=HEAPU32[_nbind.Pool.pagePtr];', '_nbind.Pool.lreset(used,page);')};
    var _ = (function() {
      function _() {}
      _ = __decorate([emscripten_library_decorator_1.prepareNamespace('_nbind')], _);
      return _;
    }());
    _nbind._ = _;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  return module.exports;
});

$__System.registerDynamic("1", ["4", "7", "3", "2", "5", "6", "8", "9", "a"], true, function($__require, exports, module) {
  ;
  var define,
      global = this,
      GLOBAL = this;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    var c = arguments.length,
        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
        d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      r = Reflect.decorate(decorators, target, key, desc);
    else
      for (var i = decorators.length - 1; i >= 0; i--)
        if (d = decorators[i])
          r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
  };
  var emscripten_library_decorator_1 = $__require('4');
  var Globals_1 = $__require('7');
  exports._globals = Globals_1._nbind;
  var BindingType_1 = $__require('3');
  exports._type = BindingType_1._nbind;
  var BindClass_1 = $__require('2');
  exports._class = BindClass_1._nbind;
  var Callback_1 = $__require('5');
  exports._callback = Callback_1._nbind;
  var ValueObj_1 = $__require('6');
  exports._value = ValueObj_1._nbind;
  var BindingStd_1 = $__require('8');
  exports._std = BindingStd_1._nbind;
  var Caller_1 = $__require('9');
  exports._caller = Caller_1._nbind;
  var Resource_1 = $__require('a');
  exports._resource = Resource_1._nbind;
  emscripten_library_decorator_1.setEvil(function(code) {
    return eval(code);
  });
  var _defineHidden = emscripten_library_decorator_1.defineHidden;
  var _nbind;
  (function(_nbind) {
    _nbind.Pool = Globals_1._nbind.Pool;
  })(_nbind = exports._nbind || (exports._nbind = {}));
  var _nbind;
  (function(_nbind) {})(_nbind = exports._nbind || (exports._nbind = {}));
  emscripten_library_decorator_1.publishNamespace('_nbind');
  function _readAsciiString(ptr) {
    var endPtr = ptr;
    while (HEAPU8[endPtr++])
      ;
    return (String.fromCharCode.apply('', HEAPU8.subarray(ptr, endPtr - 1)));
  }
  var nbind = (function() {
    function nbind() {}
    nbind._nbind_register_pool = function(pageSize, usedPtr, rootPtr, pagePtr) {
      _nbind.Pool.pageSize = pageSize;
      _nbind.Pool.usedPtr = usedPtr / 4;
      _nbind.Pool.rootPtr = rootPtr;
      _nbind.Pool.pagePtr = pagePtr / 4;
    };
    nbind._nbind_register_method_getter_setter_id = function(methodID, getterID, setterID) {
      _nbind.MethodType.method = methodID;
      _nbind.MethodType.getter = getterID;
      _nbind.MethodType.setter = setterID;
    };
    nbind._nbind_register_type = function(id, namePtr) {
      var name = _readAsciiString(namePtr);
      var constructorTbl = {
        'bool': _nbind.BooleanType,
        'cbFunction &': _nbind.CallbackType,
        'std::string': _nbind.StringType,
        '_nbind_new': _nbind.CreateValueType
      };
      var constructor = constructorTbl[name] || _nbind.BindType;
      new constructor(id, name);
    };
    nbind._nbind_register_types = function(dataPtr) {
      var count = HEAPU32[dataPtr / 4];
      var idListPtr = HEAPU32[dataPtr / 4 + 1] / 4;
      var sizeListPtr = HEAPU32[dataPtr / 4 + 2] / 4;
      var flagListPtr = HEAPU32[dataPtr / 4 + 3];
      var idList = HEAPU32.subarray(idListPtr, idListPtr + count);
      var sizeList = HEAPU32.subarray(sizeListPtr, sizeListPtr + count);
      var flagList = HEAPU8.subarray(flagListPtr, flagListPtr + count);
      function createType(id, flag, size) {
        var isSignless = flag & 16;
        var isConst = flag & 8;
        var isPointer = flag & 4;
        var isFloat = flag & 2;
        var isUnsigned = flag & 1;
        var name = isConst ? 'const ' : '';
        if (isSignless) {
          name += 'char';
        } else if (isPointer) {
          if (isUnsigned)
            name += 'un';
          name += 'signed char';
        } else {
          name += ((isUnsigned ? 'u' : '') + (isFloat ? 'float' : 'int') + (size * 8 + '_t'));
        }
        if (isPointer) {
          new _nbind.CStringType(id, name + ' *');
        } else {
          new _nbind.PrimitiveType(id, name, size, !!isUnsigned, !!isFloat);
        }
      }
      for (var num = 0; num < count; ++num) {
        createType(idList[num], flagList[num], sizeList[num]);
      }
    };
    nbind._nbind_register_class = function(idListPtr, namePtr) {
      var name = _readAsciiString(namePtr);
      var idList = HEAPU32.subarray(idListPtr / 4, idListPtr / 4 + 3);
      var Bound = (function(_super) {
        __extends(Bound, _super);
        function Bound(marker, ptr) {
          if ((false && _super.call(this)) || !(this instanceof Bound)) {
            return (new (Function.prototype.bind.apply(Bound, Array.prototype.concat.apply([null], arguments)))());
          }
          _super.call(this);
          _defineHidden(marker === _nbind.ptrMarker ? ptr : this.__nbindConstructor.apply(this, arguments))(this, '__nbindPtr');
        }
        __decorate([_defineHidden()], Bound.prototype, "__nbindConstructor", void 0);
        __decorate([_defineHidden()], Bound.prototype, "__nbindValueConstructor", void 0);
        return Bound;
      }(_nbind.Wrapper));
      new _nbind.BindClass(idList[0], name, Bound);
      new _nbind.BindClassPtr(idList[1], name + ' *', Bound);
      new _nbind.BindClassPtr(idList[2], 'const ' + name + ' *', Bound);
      Module[name] = Bound;
    };
    nbind._nbind_register_constructor = function(typeID, typeListPtr, typeCount, ptr, ptrValue) {
      var typeList = _nbind.readTypeIdList(typeListPtr, typeCount);
      var proto = _nbind.typeList[typeID].proto.prototype;
      typeList[0] = 'uint32_t';
      _nbind.addMethod(proto, '__nbindConstructor', _nbind.makeCaller(null, 0, ptr, typeList), typeCount - 1);
      typeList.splice(0, 1, 'void', 'uint32_t');
      _nbind.addMethod(proto, '__nbindValueConstructor', _nbind.makeCaller(null, 0, ptrValue, typeList), typeCount);
    };
    nbind._nbind_register_destructor = function(typeID, ptr) {
      _nbind.addMethod(_nbind.typeList[typeID].proto.prototype, 'free', _nbind.makeMethodCaller(ptr, 0, typeID, ['void']), 0);
    };
    nbind._nbind_register_function = function(typeID, typeListPtr, typeCount, ptr, namePtr, num, direct) {
      var name = _readAsciiString(namePtr);
      var typeList = _nbind.readTypeIdList(typeListPtr, typeCount);
      _nbind.addMethod(_nbind.typeList[typeID].proto, name, _nbind.makeCaller(ptr, num, direct, typeList), typeCount - 1);
    };
    nbind._nbind_register_method = function(typeID, typeListPtr, typeCount, ptr, namePtr, num, methodType) {
      var name = _readAsciiString(namePtr);
      var typeList = _nbind.readTypeIdList(typeListPtr, typeCount);
      var proto = _nbind.typeList[typeID].proto.prototype;
      if (methodType == _nbind.MethodType.method) {
        _nbind.addMethod(proto, name, _nbind.makeMethodCaller(ptr, num, typeID, typeList), typeCount - 1);
        return;
      }
      var prefixMatcher = /^[Gg]et_?([A-Z]?)/;
      name = name.replace(prefixMatcher, function(match, initial) {
        return initial.toLowerCase();
      });
      if (methodType == _nbind.MethodType.setter) {
        proto[name] = _nbind.makeMethodCaller(ptr, num, typeID, typeList);
      } else {
        Object.defineProperty(proto, name, {
          configurable: true,
          enumerable: true,
          get: _nbind.makeMethodCaller(ptr, num, typeID, typeList),
          set: proto[name]
        });
      }
    };
    nbind.nbind_debug = function() {
      debugger;
    };
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "_nbind_register_pool", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "_nbind_register_method_getter_setter_id", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "_nbind_register_type", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "_nbind_register_types", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind', _readAsciiString, '__extends')], nbind, "_nbind_register_class", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "_nbind_register_constructor", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "_nbind_register_destructor", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind', _readAsciiString)], nbind, "_nbind_register_function", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind', _readAsciiString)], nbind, "_nbind_register_method", null);
    __decorate([emscripten_library_decorator_1.dep('_nbind')], nbind, "nbind_debug", null);
    nbind = __decorate([emscripten_library_decorator_1.exportLibrary], nbind);
    return nbind;
  }());
  return module.exports;
});

})
(function(factory) {
  if (typeof define == 'function' && define.amd)
    define([], factory);
  else if (typeof module == 'object' && module.exports && typeof require == 'function')
    module.exports = factory();
  else
    factory();
});